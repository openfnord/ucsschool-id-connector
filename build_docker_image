#!/bin/bash

set -e
#set -x

QUICK=0
[ "$1" = "-q" ] && QUICK=1

PUSH_DEV=0
[ "$1" = "--push" ] && PUSH_DEV=1


APP_ID="id-sync"
APP_VERSION="$(cd src; python3 -B -c 'import id_sync; print(id_sync.__version__)')"
BASE_IMG="$(egrep ^FROM Dockerfile | cut -d ' ' -f 2-)"
APP_IMG_NO_VERSION="docker-test-upload.software-univention.de/${APP_ID}"
APP_IMG="${APP_IMG_NO_VERSION}:${APP_VERSION}"

if [ -n "$http_proxy" ]; then
    PROXY_ARGS="--build-arg http_proxy=$http_proxy --build-arg https_proxy=$http_proxy"
fi

echo "APP_ID=$APP_ID"
echo "APP_VERSION=$APP_VERSION"
echo "BASE_IMG=$BASE_IMG"
echo "APP_IMG=$APP_IMG"
echo "PROXY_ARGS: $PROXY_ARGS"

if [ "$QUICK" = "0" ] || [ "$PUSH_DEV" = "1" ]; then
     echo "Updating base image (use '-q' to skip)..."
     docker pull "$BASE_IMG"

     echo "Removing old final image (use '-q' to skip)..."
     docker rmi -f "$APP_IMG" || true
fi

ln -sfv .gitignore .dockerignore

echo "Building docker image..."
docker build $PROXY_ARGS --build-arg version="$APP_VERSION" -t "$APP_IMG" .

echo "Local Docker images:"
docker images "$APP_IMG_NO_VERSION"

if [ "$PUSH_DEV" = 1 ]; then
  read -p "Push 'Y' if you are sure you want to push '$APP_IMG' to the docker registry. " -n 1 -r
  echo
  if [[ $REPLY =~ ^[yY]$ ]]; then
    echo "Pushing image to docker registry..."
    docker push "$APP_IMG"
  fi
fi
