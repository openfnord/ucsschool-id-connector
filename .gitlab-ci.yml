stages:
  - build
  - review
  - staging
  - production

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip

.prep:
  image: python:3.9
  before_script:
    - python -m pip install --upgrade pip wheel
    - apt-get -qq update
    - apt-get -q --assume-yes install libenchant-2-2 ca-certificates rsync
    - install -m644 -D ./ucs-root-ca.crt "/usr/local/share/ca-certificates/knut-ca.crt"
    - update-ca-certificates
    - pip install -r requirements.txt --cert /etc/ssl/certs/ca-certificates.crt

.publish:
  variables:
    GIT_STRATEGY: none
  tags:
    - omar

.production:
  extends: .publish
  rules:
    - changes:
      - "docs/**/*"

.buildhtml:
  extends: .prep
  script:
    - mkdir public
    - cd docs
    - make html
    - rm _build/html/.buildinfo
    - cd _build/html/_static
    - rm -Rf webpack-macros.html __init__.py __pycache__
    - cd ../../../..
    - rsync -av --delete docs/_build/html/ public
  artifacts:
    paths:
      - public

linkcheck:
  extends: .prep
  stage: build
  script:
    - cd docs
    - make linkcheck
  artifacts:
    paths:
      - docs/_build/linkcheck

spelling:
  extends: .prep
  stage: build
  script:
    - cd docs
    - make spelling
  artifacts:
    paths:
      - docs/_build/spelling

html:
  extends: .buildhtml
  stage: build

review:
  stage: review
  rules:
    - if: '$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'
  extends: .publish
  script:
    - rsync -av --delete public/ /var/univention/buildsystem2/test_mirror/ftp/download/docs.$CI_BUILD_REF_SLUG
  environment:
    name: review/$CI_BUILD_REF_NAME
    url: http://apt.knut.univention.de/download/docs.$CI_BUILD_REF_SLUG/
    on_stop: stop_review
    auto_stop_in: 1 week

stop_review:
  stage: staging
  rules:
    - if: '$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'
      when: manual
  needs:
    - review
  allow_failure: true
  extends: .publish
  script:
    - rm -rf /var/univention/buildsystem2/test_mirror/ftp/download/docs.$CI_BUILD_REF_SLUG
  environment:
    name: review/$CI_BUILD_REF_NAME
    action: stop


pages:
  extends: .buildhtml
  stage: staging
  rules:
      - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  environment:
    name: pages/$CI_BUILD_REF_NAME
    url: http://univention.gitpages.knut.univention.de/components/ucsschool-id-connector/

staging:
  stage: staging
  extends: .production
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  script:
      - rsync -av --delete public/ /var/univention/buildsystem2/test_mirror/ftp/download/docs/ucsschool-id-connector/
  environment:
    name: staging
    url: http://apt.knut.univention.de/download/docs/ucsschool-id-connector/

production:
  stage: production
  extends: .production
  cache:
    paths:
      - docs
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: manual
  script:
    - '[ -d docs ] || git clone --branch master --depth 1 --single-branch https://ucs-docs-deployment:$DOCS_TOKEN@git.knut.univention.de/univention/docs.univention.de.git docs'
    - cd docs
    - git clean -f -d
    - git fetch --no-tags origin
    - git reset --hard origin/master
    - rsync -av --delete ../public/ ./ucsschool-id-connector
    - git add -u
    - git commit -m "Automatic doc deployment by GitLab commit $CI_COMMIT_SHA"
    - git push
  environment:
    name: production
    url: http://updates.knut.univention.de/download/docs/

