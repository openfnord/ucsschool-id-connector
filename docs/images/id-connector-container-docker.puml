' Like what you see? Join us!
' https://www.univention.com/about-us/careers/vacancies/
'
' Copyright (C) 2021-2023 Univention GmbH
'
' SPDX-License-Identifier: AGPL-3.0-only
'
' https://www.univention.com/
'
' All rights reserved.
'
' The source code of this program is made available under the terms of
' the GNU Affero General Public License v3.0 only (AGPL-3.0-only) as
' published by the Free Software Foundation.
'
' Binary versions of this program provided by Univention to you as
' well as other copyrighted, protected or trademarked materials like
' Logos, graphics, fonts, specific documentations and configurations,
' cryptographic keys etc. are subject to a license agreement between
' you and Univention and not subject to the AGPL-3.0-only.
'
' In the case you use this program under the terms of the AGPL-3.0-only,
' the program is provided in the hope that it will be useful, but
' WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
' Affero General Public License for more details.
'
' You should have received a copy of the GNU Affero General Public
' License with the Debian GNU/Linux or Univention distribution in file
' /usr/share/common-licenses/AGPL-3; if not, see
' <https://www.gnu.org/licenses/agpl-3.0.txt>.

@startuml
!include styling.puml
' skinparam linetype ortho

title ID Connector: ID Connector Components\n

!include object_primary.puml



!include object_large_queue.puml

frame "ID Connector\nDocker" as id_connector {

    !include object_management_api.puml
    !include object_daemon.puml
    !include object_sqlite.puml
    !include object_out_queue_a.puml
    !include object_out_queue_b.puml
    !include object_out_a.puml
    !include object_out_b.puml

}


!include object_school_provider_a.puml
!include object_school_provider_b.puml



primary-->large_queue : <b>write user/group data\n<i>JSON
large_queue --> daemon: <b>read user/group data\n<i>JSON

daemon-right->sqlite: <b>read/write\n<b> user/group data\n<i>python
daemon --> out_queue_a:<b>write\n<b>user/group data\n<i>JSON
daemon --> out_queue_b:<b>write\n<b>user/group data\n<i>JSON
out_queue_a --> out_a:<b>read\n<i>JSON
out_queue_b --> out_b:<b>read\n<i>JSON
out_a --> school_provider_a:<b>write user/group\n<i>HTTP
out_b --> school_provider_b:<b>write user/group\n<i>HTTP


daemon <--> management_api:<b>config\n<b>read status\n<i>JSON
out_a <-left-> management_api:<b>config\n<b>read status\n<i>JSON
out_b <-left-> management_api:<b>config\n<b>read status\n<i>JSON

primary --> daemon: <b>get extra data\n<i>python-ldap

'user/group/group <-- management_api: <b>Read/write user/group data\n<i>UDM-REST-API

@enduml
